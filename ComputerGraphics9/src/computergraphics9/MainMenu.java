/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package computergraphics9;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;


public class MainMenu extends javax.swing.JFrame {

    File ImageFile;
    BufferedImage img;
    
    public MainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileOpen = new javax.swing.JFileChooser();
        mainPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        selectedImage_field = new javax.swing.JTextField();
        selectedImage_text = new javax.swing.JLabel();
        selectImage_button = new javax.swing.JButton();
        drawImage_button = new javax.swing.JButton();
        rotation_slider = new javax.swing.JSlider();
        rotation_text = new javax.swing.JLabel();
        rotation_button = new javax.swing.JButton();
        amount_text = new javax.swing.JLabel();
        shearing_button = new javax.swing.JButton();
        sharing_y_slider = new javax.swing.JSlider();
        sharing_x_slider = new javax.swing.JSlider();
        sharing_label = new javax.swing.JLabel();
        sharing_amount = new javax.swing.JLabel();
        xaxis_button = new javax.swing.JButton();
        yaxis_button = new javax.swing.JButton();
        origin_button = new javax.swing.JButton();
        imagePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBackground(new java.awt.Color(220, 220, 220));

        menuPanel.setBorder(null);

        selectedImage_field.setText("none");

        selectedImage_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectedImage_text.setText("Selected Image");

        selectImage_button.setText("Select Image");
        selectImage_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectImage_buttonActionPerformed(evt);
            }
        });

        drawImage_button.setText("Draw Image");
        drawImage_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawImage_buttonActionPerformed(evt);
            }
        });

        rotation_slider.setMaximum(360);
        rotation_slider.setPaintLabels(true);
        rotation_slider.setPaintTicks(true);
        rotation_slider.setValue(0);
        rotation_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rotation_sliderStateChanged(evt);
            }
        });

        rotation_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rotation_text.setText("Rotation Amount");

        rotation_button.setText("Rotate");
        rotation_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotation_buttonActionPerformed(evt);
            }
        });

        amount_text.setText("0");

        shearing_button.setText("Shearing");
        shearing_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shearing_buttonActionPerformed(evt);
            }
        });

        sharing_y_slider.setValue(0);
        sharing_y_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sharing_y_sliderStateChanged(evt);
            }
        });

        sharing_x_slider.setValue(0);
        sharing_x_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sharing_x_sliderStateChanged(evt);
            }
        });

        sharing_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sharing_label.setText("Shearing Amount");

        sharing_amount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sharing_amount.setText("X = 0 Y = 0");

        xaxis_button.setText("X Axis");
        xaxis_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xaxis_buttonActionPerformed(evt);
            }
        });

        yaxis_button.setText("Y Axis");
        yaxis_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yaxis_buttonActionPerformed(evt);
            }
        });

        origin_button.setText("Origin");
        origin_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                origin_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selectedImage_field)
            .addComponent(selectedImage_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(selectImage_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(drawImage_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rotation_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(rotation_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rotation_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sharing_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(amount_text)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sharing_y_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(sharing_amount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sharing_x_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(shearing_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(origin_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                                .addComponent(xaxis_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(yaxis_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectedImage_text)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectedImage_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectImage_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(drawImage_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rotation_text)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(amount_text)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rotation_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rotation_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sharing_label)
                .addGap(4, 4, 4)
                .addComponent(sharing_amount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sharing_x_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sharing_y_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(shearing_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xaxis_button)
                    .addComponent(yaxis_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(origin_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imagePanel.setBorder(null);

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectImage_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectImage_buttonActionPerformed
        
        fileOpen.showOpenDialog(this);
        
        ImageFile = fileOpen.getSelectedFile();
        
        if(!ImageFile.canRead()){
            JOptionPane.showMessageDialog(rootPane, "Problem With Select Item");  
        }else{
            selectedImage_field.setText(ImageFile.getAbsolutePath());
        }
        
    }//GEN-LAST:event_selectImage_buttonActionPerformed

    private void drawImage_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawImage_buttonActionPerformed
        
        clean();
        
        BufferedImage resizedImage = new BufferedImage(imagePanel.getWidth(), imagePanel.getHeight(), BufferedImage.TYPE_INT_ARGB);
        
        Graphics2D g2d = (Graphics2D) resizedImage.createGraphics();
        
        try {
            img = ImageIO.read(ImageFile);
            
            g2d.drawImage(img, 0, 0, 400, 400, null);
            
            g2d = (Graphics2D) imagePanel.getGraphics();
            
            g2d.drawImage(img, 0, 0, 400, 400, null);
            
            img = resizedImage;
            
            g2d.dispose();
            
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_drawImage_buttonActionPerformed

    private void rotation_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotation_buttonActionPerformed
        double amount = rotation_slider.getValue();
        //send rotation amount to rotation function
        rotation(amount);
    }//GEN-LAST:event_rotation_buttonActionPerformed

    private void rotation_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rotation_sliderStateChanged
        amount_text.setText(String.valueOf(rotation_slider.getValue()));
    }//GEN-LAST:event_rotation_sliderStateChanged

    private void sharing_x_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sharing_x_sliderStateChanged
        sharing_amount.setText("X = "+sharing_x_slider.getValue()+" Y = "+sharing_y_slider.getValue());
    }//GEN-LAST:event_sharing_x_sliderStateChanged

    private void sharing_y_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sharing_y_sliderStateChanged
        sharing_amount.setText("X = "+sharing_x_slider.getValue()+" Y = "+sharing_y_slider.getValue());
    }//GEN-LAST:event_sharing_y_sliderStateChanged

    private void shearing_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shearing_buttonActionPerformed
        int x_slider = sharing_x_slider.getValue();
        int y_slider = sharing_y_slider.getValue();
        
        shearing(x_slider, y_slider);
    }//GEN-LAST:event_shearing_buttonActionPerformed

    private void xaxis_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xaxis_buttonActionPerformed
        reflection(0);
    }//GEN-LAST:event_xaxis_buttonActionPerformed

    private void origin_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_origin_buttonActionPerformed
        reflection(2);
    }//GEN-LAST:event_origin_buttonActionPerformed

    private void yaxis_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yaxis_buttonActionPerformed
        reflection(1);
    }//GEN-LAST:event_yaxis_buttonActionPerformed

    
    public void rotation(double amount){
        
        clean();
        
        Graphics2D g2d = (Graphics2D) imagePanel.getGraphics();
        
        int width = img.getWidth();
        int height = img.getHeight();
        
        amount = Math.toRadians(amount);
        
        AffineTransform tx = AffineTransform.getRotateInstance(amount, width, height);
        AffineTransformOp op = new AffineTransformOp(tx, AffineTransformOp.TYPE_BILINEAR);
        
        g2d.drawImage(op.filter(img, null), 0, 0, 400, 400, null);
        
        g2d.dispose();
        
    }
    
    public void clean(){
        Graphics2D g2d = (Graphics2D) imagePanel.getGraphics();
        
        g2d.setColor(new Color(240,240,240));
        g2d.fillRect(0, 0, imagePanel.getWidth(), imagePanel.getHeight());
        g2d.drawRect(0, 0, imagePanel.getWidth(), imagePanel.getHeight());
        
    }
    
    public void shearing(int x, int y){
        
        clean();
        
        Graphics2D g2d = (Graphics2D) imagePanel.getGraphics();
        
        int width = img.getWidth();
        int height = img.getHeight();
        
        AffineTransform tx = new AffineTransform();
        
        tx.shear((double)x/100, (double)y/100);
        
        g2d.setTransform(tx);
        
        /*AffineTransformOp op = new AffineTransformOp(tx, AffineTransformOp.TYPE_BILINEAR);
        
        op.filter(img, null);*/
        
        g2d.drawImage(img, tx, null);
        
        g2d.dispose();
        
    }
    
    public void reflection(int choose){
        
        clean();
        
        BufferedImage reflected = new BufferedImage(img.getWidth(), img.getHeight(), BufferedImage.TYPE_INT_ARGB);
        
        Graphics2D g2d = (Graphics2D) reflected.createGraphics();
        
        for(int i = 0; i<img.getWidth(); i++){
            for(int j = 0; j<img.getHeight(); j++){
             
                int colorint = img.getRGB(i, j);
                g2d.setColor(new Color(colorint));
                
                switch (choose) {
                    case 0:
                        g2d.drawLine(i, (img.getHeight()-1)-j, i, (img.getHeight()-1)-j);
                        break;
                    case 1:
                        g2d.drawLine((img.getWidth()-1)-i, j, (img.getWidth()-1)-i, j);
                        break;
                    case 2:
                        g2d.drawLine((img.getWidth()-1)-i, (img.getHeight()-1)-j, (img.getWidth()-1)-i, (img.getHeight()-1)-j);
                        break;
                    default:
                        break;
                }
                
            }
        }
        
        g2d = (Graphics2D) imagePanel.getGraphics();
        
        g2d.drawImage(reflected, 0, 0, 400, 400, this);
        
        g2d.dispose();
        
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amount_text;
    private javax.swing.JButton drawImage_button;
    private javax.swing.JFileChooser fileOpen;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JButton origin_button;
    private javax.swing.JButton rotation_button;
    private javax.swing.JSlider rotation_slider;
    private javax.swing.JLabel rotation_text;
    private javax.swing.JButton selectImage_button;
    private javax.swing.JTextField selectedImage_field;
    private javax.swing.JLabel selectedImage_text;
    private javax.swing.JLabel sharing_amount;
    private javax.swing.JLabel sharing_label;
    private javax.swing.JSlider sharing_x_slider;
    private javax.swing.JSlider sharing_y_slider;
    private javax.swing.JButton shearing_button;
    private javax.swing.JButton xaxis_button;
    private javax.swing.JButton yaxis_button;
    // End of variables declaration//GEN-END:variables
}
