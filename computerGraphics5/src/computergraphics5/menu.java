/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package computergraphics5;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.image.RescaleOp;
import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author hasalp
 */
public class menu extends javax.swing.JFrame {

    File selected;
    BufferedImage image;
    int counter[] = new int[256];
    
    public menu() {
        initComponents();
        //fill counter with 0
        Arrays.fill(counter, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        select_button = new javax.swing.JButton();
        select_text = new javax.swing.JLabel();
        selected_image = new javax.swing.JTextField();
        drawhistogram_button = new javax.swing.JButton();
        contrast_button = new javax.swing.JButton();
        clean_button = new javax.swing.JButton();
        histogram_button = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        histogram_panel = new javax.swing.JPanel();
        image_panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        select_button.setBackground(new java.awt.Color(255, 255, 255));
        select_button.setText("Select Image");
        select_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_buttonActionPerformed(evt);
            }
        });

        select_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        select_text.setText("Selected Image");

        selected_image.setText("N/A");

        drawhistogram_button.setBackground(new java.awt.Color(255, 255, 255));
        drawhistogram_button.setText("Draw Histogram");
        drawhistogram_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawhistogram_buttonActionPerformed(evt);
            }
        });

        contrast_button.setBackground(new java.awt.Color(255, 255, 255));
        contrast_button.setText("Contrast Stretch");
        contrast_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrast_buttonActionPerformed(evt);
            }
        });

        clean_button.setBackground(new java.awt.Color(255, 255, 255));
        clean_button.setText("Clean ALL");
        clean_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clean_buttonActionPerformed(evt);
            }
        });

        histogram_button.setBackground(new java.awt.Color(255, 255, 255));
        histogram_button.setText("Histogram Equalization");
        histogram_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                histogram_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selected_image, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(drawhistogram_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(select_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(select_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(contrast_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clean_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(histogram_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(select_text)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selected_image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(select_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(drawhistogram_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(contrast_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(histogram_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clean_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        title.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Computer Graphics Homework 5");

        javax.swing.GroupLayout histogram_panelLayout = new javax.swing.GroupLayout(histogram_panel);
        histogram_panel.setLayout(histogram_panelLayout);
        histogram_panelLayout.setHorizontalGroup(
            histogram_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );
        histogram_panelLayout.setVerticalGroup(
            histogram_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout image_panelLayout = new javax.swing.GroupLayout(image_panel);
        image_panel.setLayout(image_panelLayout);
        image_panelLayout.setHorizontalGroup(
            image_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 334, Short.MAX_VALUE)
        );
        image_panelLayout.setVerticalGroup(
            image_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(histogram_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(image_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(histogram_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(image_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void select_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_buttonActionPerformed
        
        fileChooser.showOpenDialog(null);
        selected = fileChooser.getSelectedFile();
        if(selected.isFile()){
            selected_image.setText(selected.getAbsolutePath());
        }
        
        try {
            image = ImageIO.read(selected);
        } catch (IOException ex) {
            Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_select_buttonActionPerformed

    private void drawhistogram_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawhistogram_buttonActionPerformed
        int x=0,y=0,panel_x,panel_y;
        
        //get panel width height
        panel_x = histogram_panel.getWidth();
        panel_y = histogram_panel.getHeight();
        
        Arrays.fill(counter, 0);
        try {
            image = ImageIO.read(selected);
        } catch (IOException ex) {
            Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Graphics2D graphics = (Graphics2D) histogram_panel.getGraphics();
        Graphics2D graphics2 = (Graphics2D) image_panel.getGraphics();
        //clear
        graphics.setColor(new Color(238,238,238));
        graphics.drawLine(0, 0, histogram_panel.getWidth(), histogram_panel.getHeight());
        graphics.setColor(Color.black);
        
        if(!selected.canRead()){
            JOptionPane.showMessageDialog(rootPane, "Can't read image !!");
        }else {
            
            if(image == null){
            JOptionPane.showMessageDialog(null, "Selected Image Unavailable");
            }
        
            for(x=0;x<image.getWidth();x++){
                for(y=0;y<image.getHeight();y++){
                    //get pixel's rgb
                    int rgb = image.getRGB(x, y);
                    //turn rgb as a color
                    Color col = new Color(rgb,true);
                    //set invert color
                    col = new Color(
                        (col.getRed()+col.getGreen()+col.getBlue())/3,
                        (col.getRed()+col.getGreen()+col.getBlue())/3,
                        (col.getRed()+col.getGreen()+col.getBlue())/3
                    );
                
                    image.setRGB(x, y, col.getRGB());
                    
                    counter[col.getRed()]++;
                
                }
            }
            
            graphics2.drawImage(image, 0, 0, image_panel.getWidth(), image_panel.getHeight(), null);
            
            for(x=0;x<255;x++){
                
                graphics.setColor(Color.BLACK);
                graphics.drawLine(x, panel_y-1, x, panel_y-counter[x]);
                
            }
            
        }
        
        
    }//GEN-LAST:event_drawhistogram_buttonActionPerformed

    private void contrast_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrast_buttonActionPerformed

        BufferedImage contrasted = contraststrech(image);
            
        drawimage(contrasted);
        drawhistogram(contrasted);
        
        contrasted.flush();
        
    }//GEN-LAST:event_contrast_buttonActionPerformed

    private void clean_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clean_buttonActionPerformed
        histogram_panel.repaint();
        image_panel.repaint();
    }//GEN-LAST:event_clean_buttonActionPerformed

    private void histogram_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_histogram_buttonActionPerformed

        BufferedImage contrasted = histogramequ(image);
        
        drawimage(contrasted);
        drawhistogram(contrasted);
        
        contrasted.flush();
        
    }//GEN-LAST:event_histogram_buttonActionPerformed

    private BufferedImage contraststrech(BufferedImage cs_image){
        
        int img_x = cs_image.getWidth();
        int img_y = cs_image.getHeight();
        int red, rgb;
        int max_color = 0;
        
        RescaleOp rescaleOp = new RescaleOp(0.8f, 20, null);
        rescaleOp.filter(cs_image, cs_image);
        
        return cs_image;
    }
    
    private BufferedImage histogramequ(BufferedImage cs_image){
        
        int img_x = cs_image.getWidth();
        int img_y = cs_image.getHeight();
        int red, rgb;
        int max_color = 0;
        
        RescaleOp rescaleOp = new RescaleOp(1.5f, 1, null);
        rescaleOp.filter(cs_image, cs_image);

        return cs_image;
    }
    
    void drawimage(BufferedImage d_image){
        
        Graphics2D graphics = (Graphics2D) image_panel.getGraphics();
        
        graphics.drawImage(d_image, 0, 0, image_panel.getWidth(), image_panel.getHeight(), null);
        
    }
    
    void drawhistogram(BufferedImage d_image){
        
        Graphics2D graphics = (Graphics2D) histogram_panel.getGraphics();
        
        int x = d_image.getWidth();
        int y = d_image.getHeight();
        int rgb;
        int histogram[] = new int[256];
        Arrays.fill(histogram, 0);
        
        for(int m=0;m<x;m++){
            for(int n=0;n<y;n++){
                
                rgb = d_image.getRGB(m, n);
                Color c = new Color(rgb,true);
                
                histogram[c.getRed()]++;
            }
        }
        
        for(int color = 0;color<=255;color++){
            graphics.drawLine(color, histogram_panel.getHeight()-1, color, histogram_panel.getHeight()-histogram[color]);
        }
        
        
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clean_button;
    private javax.swing.JButton contrast_button;
    private javax.swing.JButton drawhistogram_button;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton histogram_button;
    private javax.swing.JPanel histogram_panel;
    private javax.swing.JPanel image_panel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton select_button;
    private javax.swing.JLabel select_text;
    private javax.swing.JTextField selected_image;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
