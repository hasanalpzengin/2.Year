/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package curveprogram;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.MouseInfo;
import java.awt.Paint;
import java.awt.Point;
import java.awt.geom.QuadCurve2D;
import javax.swing.JOptionPane;

/**
 *
 * @author hasal
 */
public class Gui extends javax.swing.JFrame {

    double points[] = new double[6];
    double new_point[] = new double[2];
    int click = 0;
    boolean button = false;
    boolean change_button = false;
    int point = 0;
    
    public Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paren_panel = new javax.swing.JPanel();
        dock = new javax.swing.JInternalFrame();
        dock_panel = new javax.swing.JPanel();
        clean = new javax.swing.JButton();
        change = new javax.swing.JButton();
        curve_button = new javax.swing.JButton();
        exit_button = new javax.swing.JButton();
        main_panel = new javax.swing.JPanel();
        coordinates = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Curve Program");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        paren_panel.setBackground(new java.awt.Color(204, 204, 255));

        dock.setBorder(null);
        dock.setTitle("Toolbar");
        dock.setVisible(true);

        dock_panel.setBackground(new java.awt.Color(204, 204, 204));

        clean.setBackground(new java.awt.Color(255, 255, 255));
        clean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/curveprogram/clean.png"))); // NOI18N
        clean.setText("Clean");
        clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanActionPerformed(evt);
            }
        });

        change.setBackground(new java.awt.Color(255, 255, 255));
        change.setIcon(new javax.swing.ImageIcon(getClass().getResource("/curveprogram/edit.png"))); // NOI18N
        change.setText("Change");
        change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeActionPerformed(evt);
            }
        });

        curve_button.setBackground(new java.awt.Color(255, 255, 255));
        curve_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/curveprogram/new.png"))); // NOI18N
        curve_button.setText("New");
        curve_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curve_buttonActionPerformed(evt);
            }
        });

        exit_button.setBackground(new java.awt.Color(255, 255, 255));
        exit_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/curveprogram/exit.png"))); // NOI18N
        exit_button.setText("Exit");
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dock_panelLayout = new javax.swing.GroupLayout(dock_panel);
        dock_panel.setLayout(dock_panelLayout);
        dock_panelLayout.setHorizontalGroup(
            dock_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dock_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(curve_button)
                .addGap(38, 38, 38)
                .addComponent(clean)
                .addGap(39, 39, 39)
                .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        dock_panelLayout.setVerticalGroup(
            dock_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(curve_button, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
            .addComponent(clean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(exit_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(change, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout dockLayout = new javax.swing.GroupLayout(dock.getContentPane());
        dock.getContentPane().setLayout(dockLayout);
        dockLayout.setHorizontalGroup(
            dockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dockLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dock_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        dockLayout.setVerticalGroup(
            dockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dockLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dock_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        main_panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Coordinat Table"));
        main_panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                main_panelMouseMoved(evt);
            }
        });
        main_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                main_panelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                main_panelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                main_panelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout main_panelLayout = new javax.swing.GroupLayout(main_panel);
        main_panel.setLayout(main_panelLayout);
        main_panelLayout.setHorizontalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_panelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(coordinates, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        main_panelLayout.setVerticalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_panelLayout.createSequentialGroup()
                .addContainerGap(484, Short.MAX_VALUE)
                .addComponent(coordinates, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout paren_panelLayout = new javax.swing.GroupLayout(paren_panel);
        paren_panel.setLayout(paren_panelLayout);
        paren_panelLayout.setHorizontalGroup(
            paren_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paren_panelLayout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addComponent(dock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(306, Short.MAX_VALUE))
            .addGroup(paren_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(main_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        paren_panelLayout.setVerticalGroup(
            paren_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paren_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(main_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paren_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paren_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void curve_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curve_buttonActionPerformed
      
        drawLines();
        JOptionPane.showMessageDialog(paren_panel, "Please Select 3 CheckPoint To Bezier Curve");
        button = true;
        change_button = false;
        
    }//GEN-LAST:event_curve_buttonActionPerformed

    private void main_panelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_main_panelMouseClicked
        
        if(button == true && change_button == false){
            Graphics2D graph = (Graphics2D) main_panel.getGraphics();
            click++;
        
            switch(click){
                case 1:{
                    points[0] = getMouse().x-main_panel.getLocationOnScreen().getX();
                    points[1] = getMouse().y-main_panel.getLocationOnScreen().getY();
                    graph.drawOval((int)points[0], (int)points[1], 5, 5);
                    break;
                }
                case 2:{
                    points[2] = getMouse().x-main_panel.getLocationOnScreen().getX();
                    points[3] = getMouse().y-main_panel.getLocationOnScreen().getY();
                    graph.drawOval((int)points[2], (int)points[3], 5, 5);
                    break;
                }
                case 3:{
                    points[4] = getMouse().x-main_panel.getLocationOnScreen().getX();
                    points[5] = getMouse().y-main_panel.getLocationOnScreen().getY();
                    click=0;
                    graph.drawOval((int)points[4], (int)points[5], 5, 5);
                    drawCurve();
                    button = false;
                    break;
                }
                
            }
        }
            
        
    }//GEN-LAST:event_main_panelMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        //draw lines at the beginning
        drawLines();
    }//GEN-LAST:event_formComponentShown

    private void cleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanActionPerformed
        clean();
    }//GEN-LAST:event_cleanActionPerformed

    private void main_panelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_main_panelMouseMoved
        
        
        drawLines();
        double x = getMouse().x-main_panel.getLocationOnScreen().getX();
        double y = getMouse().y-main_panel.getLocationOnScreen().getY();
        
        coordinates.setText(x+" X "+y);
        
    }//GEN-LAST:event_main_panelMouseMoved

    private void changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeActionPerformed
        
        drawLines();
        change_button = true;
        button = false;
        
    }//GEN-LAST:event_changeActionPerformed

    private void main_panelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_main_panelMouseReleased
        
        Graphics2D graph = (Graphics2D) main_panel.getGraphics();
        
        if(point != 0){
            
            new_point[0] = getMouse().x-main_panel.getLocationOnScreen().getX();
            new_point[1] = getMouse().y-main_panel.getLocationOnScreen().getY();
            
            clean();
            
            drawLines();
            
            switch(point){
                case 1:{
                    points[0]=new_point[0];
                    points[1]=new_point[1];
                    drawCurve();
                    drawCircles();
                    point = 0;
                    break;
                }
                case 2:{
                    points[2]=new_point[0];
                    points[3]=new_point[1];
                    drawCurve();
                    drawCircles();
                    point = 0;
                    break;
                }
                case 3:{
                    points[4]=new_point[0];
                    points[5]=new_point[1];
                    drawCurve();
                    drawCircles();
                    point = 0;
                    break;
                }
            }
            
        }
        
    }//GEN-LAST:event_main_panelMouseReleased

    private void main_panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_main_panelMousePressed
        
        double x = getMouse().x-main_panel.getLocationOnScreen().getX();
        double y = getMouse().y-main_panel.getLocationOnScreen().getY();
        
        if(button == false && change_button == true){
            
            
            
            if(points[0]+5>x && points[0]-5<x && points[1]+5>y && points[1]-5<y){
                point = 1;
            }else if(points[2]+5>x && points[2]-5<x && points[3]+5>y && points[3]-5<y){
                point = 2;
            }else if(points[4]+5>x && points[4]-5<x && points[5]+5>y && points[5]-5<y){
                point = 3;
            }
        }else{
            point = 0;
        }
        
    }//GEN-LAST:event_main_panelMousePressed

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exit_buttonActionPerformed

    public Point getMouse(){
        
        Point mouse = MouseInfo.getPointerInfo().getLocation();
        
        return mouse;
    }
    
    private void drawCurve(){
        
        Graphics2D graph = (Graphics2D) main_panel.getGraphics();
        QuadCurve2D.Double curve = new QuadCurve2D.Double(points[0],points[1],points[2],points[3],points[4],points[5]);
        
        graph.setStroke(new BasicStroke(2f));
        
        graph.setBackground(Color.BLACK);
        graph.setColor(Color.RED);
        graph.draw(curve);
        
    }
    
    private void drawLines(){
        
        Graphics2D graph = (Graphics2D) main_panel.getGraphics();
        
        graph.setBackground(Color.BLACK);
        graph.setColor(Color.BLACK);
        graph.drawLine(0, main_panel.getHeight()/2, main_panel.getWidth(), main_panel.getHeight()/2);
        graph.drawLine(main_panel.getWidth()/2, 0, main_panel.getWidth()/2, main_panel.getHeight());
        
        for(int i=0;i<main_panel.getWidth();i+=20){
            graph.drawLine(i, main_panel.getHeight()/2-5, i, main_panel.getHeight()/2+5);
        }
        
        for(int j=0;j<main_panel.getWidth();j+=20){
            graph.drawLine(main_panel.getWidth()/2-5, j, main_panel.getWidth()/2+5, j);
        }
    }
    
    private void clean(){
        Graphics2D graph = (Graphics2D) main_panel.getGraphics();
        
        graph.setColor(new Color(240,240,240));
        graph.fillRect(0, 0, main_panel.getWidth(), main_panel.getHeight());
        graph.drawRect(0, 0, main_panel.getWidth(), main_panel.getHeight());
    }
    
    private void drawCircles(){
        Graphics2D graph = (Graphics2D) main_panel.getGraphics();
        
        graph.setColor(Color.BLACK);
        graph.drawOval((int)points[0]-2, (int)points[1]-2, 5, 5);
        graph.drawOval((int)points[2]-2, (int)points[3]-2, 5, 5);
        graph.drawOval((int)points[4]-2, (int)points[5]-2, 5, 5);
        
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton change;
    private javax.swing.JButton clean;
    private javax.swing.JLabel coordinates;
    private javax.swing.JButton curve_button;
    private javax.swing.JInternalFrame dock;
    private javax.swing.JPanel dock_panel;
    private javax.swing.JButton exit_button;
    private javax.swing.JPanel main_panel;
    private javax.swing.JPanel paren_panel;
    // End of variables declaration//GEN-END:variables
}
