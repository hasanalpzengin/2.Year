/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universiteelektroniksistem;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author hasalp
 */
public class syllabus_gui extends javax.swing.JFrame {

    private static HashMap<String,Integer> coursesAndID = new HashMap<String,Integer>();
    private static HashMap<String,String> coursesAndClasses = new HashMap<String,String>();
    
    public syllabus_gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        department_cb = new javax.swing.JComboBox<>();
        prepareSyllabus_button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        grade_cb = new javax.swing.JComboBox<>();
        mainMenu_button = new javax.swing.JButton();
        save_syllabus = new javax.swing.JButton();
        delete_syllabus = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        season_cb = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        syllabus_table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EU - Ders Programi");
        setIconImage(new ImageIcon(getClass().getResource("/images/logo50x50.png")).getImage());
        setMinimumSize(new java.awt.Dimension(657, 432));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        mainPanel.setBackground(new java.awt.Color(254, 254, 254));
        mainPanel.setMinimumSize(new java.awt.Dimension(657, 432));

        jLabel1.setText("Ders Programı İşlemleri");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Bölüm");

        prepareSyllabus_button.setBackground(new java.awt.Color(254, 254, 254));
        prepareSyllabus_button.setText("Program Olustur");
        prepareSyllabus_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prepareSyllabus_buttonActionPerformed(evt);
            }
        });

        jLabel3.setText("Sınıf");

        grade_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hazırlık", "1", "2", "3", "4", "5", "6", "7" }));

        mainMenu_button.setBackground(new java.awt.Color(254, 254, 254));
        mainMenu_button.setText("Ana Menü");
        mainMenu_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenu_buttonActionPerformed(evt);
            }
        });

        save_syllabus.setBackground(new java.awt.Color(254, 254, 254));
        save_syllabus.setText("Programı Kaydet");
        save_syllabus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_syllabusActionPerformed(evt);
            }
        });

        delete_syllabus.setBackground(new java.awt.Color(254, 254, 254));
        delete_syllabus.setText("Seçilen Programi Sil");
        delete_syllabus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_syllabusActionPerformed(evt);
            }
        });

        jLabel14.setText("<html>Otomatik Eklenenler<br>Dışında Elinizle<br>Ders Ekleyebilir<br>ve O hali ile<br>kaydedebilirsiniz.</html>");

        season_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Güz", "Bahar" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainMenu_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(department_cb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prepareSyllabus_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(save_syllabus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete_syllabus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(grade_cb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(season_cb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(department_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grade_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(season_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prepareSyllabus_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(save_syllabus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delete_syllabus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mainMenu_button)
                .addContainerGap())
        );

        syllabus_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"9:30", null, null, null, null, null},
                {"10:30", null, null, null, null, null},
                {"11:30", null, null, null, null, null},
                {"13:30", null, null, null, null, null},
                {"14:30", null, null, null, null, null},
                {"15:30", null, null, null, null, null},
                {"16:30", null, null, null, null, null}
            },
            new String [] {
                "Saat\\Gün", "PAZARTESİ", "SALI", "ÇARŞAMBA", "PERŞEMBE", "CUMA"
            }
        ));
        syllabus_table.setRowHeight(40);
        jScrollPane1.setViewportView(syllabus_table);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        department_cb.removeAllItems();
        
        try {
            Connection connect = new db_connection().connect;
            Statement stm = (Statement) connect.createStatement();
            ResultSet rs = (ResultSet) stm.executeQuery("SELECT bolum_ismi FROM bolumler");
            
            while(rs.next()){
                department_cb.addItem(rs.getString("bolum_ismi"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(syllabus_gui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(syllabus_gui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowActivated

    private void prepareSyllabus_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prepareSyllabus_buttonActionPerformed
            //table view reset
        coursesAndID.clear();
        syllabus_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"9:30", null, null, null, null, null},
                {"10:30", null, null, null, null, null},
                {"11:30", null, null, null, null, null},
                {"13:30", null, null, null, null, null},
                {"14:30", null, null, null, null, null},
                {"15:30", null, null, null, null, null},
                {"16:30", null, null, null, null, null}
            },
            new String [] {
                "Saat\\Gün", "PAZARTESİ", "SALI", "ÇARŞAMBA", "PERŞEMBE", "CUMA"
            }
        ));
        
        float total_time = 0.0f;
        int days[] = new int[5];
        String[] times = {"16:30","15:30","14:30","13:30","11:30","10:30","9:30"};
        Arrays.fill(days, 7);
        int time=0;
        int day=0;
        boolean test=false;
        Random rand = new Random();
        
        try {
            Connection connect = new db_connection().connect;
            PreparedStatement prep_stm = (PreparedStatement) connect.prepareStatement("SELECT ders_ismi,ders_suresi,ders_id,ders_ogretmeni FROM dersler WHERE ders_sinifi=? AND bolum_id=? AND ders_donemi=?");
            prep_stm.setInt(1, grade_cb.getSelectedIndex());
            prep_stm.setInt(2, department_cb.getSelectedIndex());
            prep_stm.setInt(3, season_cb.getSelectedIndex());
            ResultSet rs = (ResultSet) prep_stm.executeQuery();
            
            while(rs.next()){
                //select a  class for each course.
                PreparedStatement prep_stm2 = (PreparedStatement) connect.prepareStatement("SELECT COUNT(*) FROM secilen_dersler WHERE ders_id=?");
                prep_stm2.setInt(1, rs.getInt("ders_id"));
                ResultSet rs2 = (ResultSet) prep_stm2.executeQuery();
                rs2.next();
                
                if(rs2.getInt("COUNT(*)")>30){
                    coursesAndClasses.put(rs.getString("ders_ismi"), "Amfi"+rand.nextInt(20));
                }else{
                    coursesAndClasses.put(rs.getString("ders_ismi"), "Sinif"+rand.nextInt(20));
                }
                //select a place to course
                int trytoFind=0;
                
                PreparedStatement prep_stm3 = (PreparedStatement) connect.prepareStatement("SELECT ders_saati,ders_gunu FROM ders_program,dersler WHERE ders_program.ders_id=dersler.ders_id AND ders_program.ders_donemi=? AND ders_ogretmeni=?");
                prep_stm3.setInt(1, season_cb.getSelectedIndex());
                prep_stm3.setInt(2, rs.getInt("ders_ogretmeni"));
                ResultSet rs3 = (ResultSet) prep_stm3.executeQuery();
                
                //select random day to put selected course
                do{
                    test=false;
                    day=rand.nextInt(5);
                    trytoFind++;
                    //check teacher's availability
                    while(rs3.next()){
                        if(rs3.getInt("ders_gunu")==day && rs3.getString("ders_saati").equals(times[days[day]-1])){
                            test=true;
                            JOptionPane.showMessageDialog(this, rs.getString("ders_ismi")+"'nin öğretmeni'nin aynı saatte dersi var.");
                        }
                    }
                    //if try count bigger than 100 end doWhile loop.
                    if(trytoFind>100){
                        break;
                    }
                }while(days[day]<rs.getFloat("ders_suresi") || test==true);
                
                if(days[day]>=rs.getFloat("ders_suresi")){
                    for(int i=0;i<rs.getFloat("ders_suresi");i++){
                        //get course id and course name to don't mix same named course.
                        coursesAndID.put(rs.getString("ders_ismi"),rs.getInt("ders_id"));
                        syllabus_table.setValueAt(rs.getString("ders_ismi"),(7-days[day]),(day+1));
                        time++;
                        days[day]--;
                    }
                }else{
                    JOptionPane.showMessageDialog(this,  rs.getString("ders_ismi")+" Dersine "+rs.getFloat("ders_suresi")+" Saatlik Uygun Gun Bulunamadi");
                }
            }
            
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(syllabus_gui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_prepareSyllabus_buttonActionPerformed

    private void mainMenu_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenu_buttonActionPerformed
        mainMenu gui = new mainMenu();
        gui.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_mainMenu_buttonActionPerformed

    private void save_syllabusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_syllabusActionPerformed
        int time=0;
        int day=1;
                   
        try {
            Connection connect = new db_connection().connect;
            PreparedStatement prep_stm;
            
            prep_stm = (PreparedStatement) connect.prepareStatement("SELECT * FROM ders_program where bolum_id=? AND ders_sinifi=? AND ders_donemi=?");
            prep_stm.setInt(1, department_cb.getSelectedIndex());
            prep_stm.setInt(2, grade_cb.getSelectedIndex());
            prep_stm.setInt(3, season_cb.getSelectedIndex());
            ResultSet rs = prep_stm.executeQuery();
            
            prep_stm.clearBatch();
            
            if(!rs.next()){
                while(day<6){
                    //add course to ders_program table if it is not null
                    if(syllabus_table.getValueAt(time, day) != null && !syllabus_table.getValueAt(time, day).toString().isEmpty()){
                        //insert syllabus
                        prep_stm = (PreparedStatement) connect.prepareStatement("insert into ders_program(ders_ismi,bolum_id,ders_sinifi,ders_saati,ders_gunu,ders_donemi,ders_id,ders_derslik) values(?,?,?,?,?,?,?,?)");
                        prep_stm.setString(1, (String) syllabus_table.getValueAt(time, day));
                        prep_stm.setInt(2, department_cb.getSelectedIndex());
                        prep_stm.setInt(3, grade_cb.getSelectedIndex());
                        prep_stm.setString(4, (String) syllabus_table.getValueAt(time, 0));
                        prep_stm.setInt(5, day);
                        prep_stm.setInt(6, season_cb.getSelectedIndex());
                        prep_stm.setInt(7, (int) coursesAndID.get( (String) syllabus_table.getValueAt(time, day)));
                        prep_stm.setString(8, coursesAndClasses.get((String) syllabus_table.getValueAt(time, day)));
                        
                        
                        prep_stm.execute();
                        prep_stm.clearBatch();
                        }
                    //check time for day++
                    
                    if(time==6){
                        day++;
                        time=0;
                    }else{
                        time++;
                    }
                }
                
                //insert log
                
                Statement delete_log = (Statement) connect.createStatement();
                delete_log.executeUpdate("DELETE FROM log ORDER BY date ASC limit 1");
                delete_log.close();
                
                PreparedStatement prep_stm2 = (PreparedStatement) connect.prepareStatement("INSERT INTO log(date,userid,log) VALUES(?,?,?) ");
                prep_stm2.setString(1, new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime()));
                prep_stm2.setString(2, UserInfo.userID);
                prep_stm2.setString(3, department_cb.getSelectedIndex()+" "+grade_cb.getSelectedIndex()+" "+season_cb.getSelectedIndex()+" Syllabus Inserted");
                prep_stm2.execute();
                
                prep_stm2.close();
                
                JOptionPane.showMessageDialog(rootPane, "Ders Programı Database'e Eklendi.");
            }else{
                JOptionPane.showMessageDialog(rootPane, "Daha Önce Eklenmiş Bir Ders Programı Var. Öncelikle Onu Silmelisiniz.");
            }
            
            prep_stm.close();
            connect.close();
            
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(syllabus_gui.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_save_syllabusActionPerformed

    private void delete_syllabusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_syllabusActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "Kayidin silinmesine emin misiniz ?", "Silinsin mi?",  JOptionPane.YES_NO_OPTION);
        
        if(reply == JOptionPane.YES_OPTION){    
            try {
                Connection connect = new db_connection().connect;
                PreparedStatement prep_stm;

                prep_stm = (PreparedStatement) connect.prepareStatement("DELETE FROM ders_program WHERE bolum_id = ? AND ders_sinifi=? AND ders_donemi=?");

                prep_stm.setInt(1, department_cb.getSelectedIndex());
                prep_stm.setInt(2, grade_cb.getSelectedIndex());
                prep_stm.setInt(3, season_cb.getSelectedIndex());

                prep_stm.execute();
                
                Statement delete_log = (Statement) connect.createStatement();
                delete_log.executeUpdate("DELETE FROM log ORDER BY date ASC limit 1");
                delete_log.close();
                
                PreparedStatement prep_stm2 = (PreparedStatement) connect.prepareStatement("INSERT INTO log(date,userid,log) VALUES(?,?,?) ");
                prep_stm2.setString(1, new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").format(Calendar.getInstance().getTime()));
                prep_stm2.setString(2, UserInfo.userID);
                prep_stm2.setString(3, department_cb.getSelectedIndex()+" "+grade_cb.getSelectedIndex()+" "+season_cb.getSelectedIndex()+" Syllabus Deleted");
                prep_stm2.execute();

                JOptionPane.showMessageDialog(rootPane, "Seçilen Bölüm ve Sınıfın Ders Programı Başarıyla Silindi");

                prep_stm.close();
                prep_stm2.close();
                connect.close();

            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(syllabus_gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_delete_syllabusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(syllabus_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(syllabus_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(syllabus_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(syllabus_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new syllabus_gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete_syllabus;
    private javax.swing.JComboBox<String> department_cb;
    private javax.swing.JComboBox<String> grade_cb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mainMenu_button;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton prepareSyllabus_button;
    private javax.swing.JButton save_syllabus;
    private javax.swing.JComboBox<String> season_cb;
    private javax.swing.JTable syllabus_table;
    // End of variables declaration//GEN-END:variables
}
