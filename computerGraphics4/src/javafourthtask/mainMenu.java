/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javafourthtask;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.image.RescaleOp;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author hasalp
 */
public class mainMenu extends javax.swing.JFrame {

    File selected;
    BufferedImage image;
    
    public mainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        mainPanel = new javax.swing.JPanel();
        mainLabel = new javax.swing.JLabel();
        menuPanel = new javax.swing.JPanel();
        select_button = new javax.swing.JButton();
        image_path = new javax.swing.JTextField();
        selected_image_text = new javax.swing.JLabel();
        drawImage_button = new javax.swing.JButton();
        invert_button = new javax.swing.JButton();
        brightness_slider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        brightness_button = new javax.swing.JButton();
        grayscale_button = new javax.swing.JButton();
        change_slider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        add_button = new javax.swing.JButton();
        sub_button = new javax.swing.JButton();
        image_panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(254, 254, 254));

        mainLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainLabel.setText("Computer Graphics Fourth Task");

        select_button.setText("Select Image");
        select_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_buttonActionPerformed(evt);
            }
        });

        selected_image_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selected_image_text.setText("Selected Image");

        drawImage_button.setText("Draw Selected Image");
        drawImage_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawImage_buttonActionPerformed(evt);
            }
        });

        invert_button.setText("Negative");
        invert_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invert_buttonActionPerformed(evt);
            }
        });

        brightness_slider.setMajorTickSpacing(1);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Brightness");

        brightness_button.setText("Set Brightness");
        brightness_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brightness_buttonActionPerformed(evt);
            }
        });

        grayscale_button.setText("Grayscale");
        grayscale_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grayscale_buttonActionPerformed(evt);
            }
        });

        change_slider.setMaximum(255);
        change_slider.setValue(0);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Change Amount");

        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        sub_button.setText("Sub");
        sub_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sub_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(select_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(image_path, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(selected_image_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(drawImage_button, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
            .addComponent(invert_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(brightness_slider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(brightness_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(grayscale_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(change_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(add_button)
                .addGap(18, 18, 18)
                .addComponent(sub_button)
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(selected_image_text)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(image_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(select_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(drawImage_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(invert_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brightness_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brightness_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(grayscale_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(change_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_button)
                    .addComponent(sub_button))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout image_panelLayout = new javax.swing.GroupLayout(image_panel);
        image_panel.setLayout(image_panelLayout);
        image_panelLayout.setHorizontalGroup(
            image_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 443, Short.MAX_VALUE)
        );
        image_panelLayout.setVerticalGroup(
            image_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mainLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                    .addComponent(image_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(mainLabel)
                        .addGap(18, 18, 18)
                        .addComponent(image_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void select_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_buttonActionPerformed
        fileChooser.showOpenDialog(null);
        selected = fileChooser.getSelectedFile();
        if(selected.isFile()){
            image_path.setText(selected.getAbsolutePath());
        }
        
        try {
            image = ImageIO.read(selected);
        } catch (IOException ex) {
            Logger.getLogger(mainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_select_buttonActionPerformed

    private void drawImage_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawImage_buttonActionPerformed
        
        Graphics2D graphics = (Graphics2D) image_panel.getGraphics();
        
            try {
            image = ImageIO.read(selected);
            } catch (IOException ex) {
            Logger.getLogger(mainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
 
            if(image == null){
                JOptionPane.showMessageDialog(null, "Selected Image Unavailable");
            }
            
            graphics.drawImage(image, 0, 0, image_panel.getWidth(), image_panel.getHeight(), null);
            
            image.flush();
            
    }//GEN-LAST:event_drawImage_buttonActionPerformed

    private void invert_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invert_buttonActionPerformed
        
        Graphics2D graphics = (Graphics2D) image_panel.getGraphics();
            
        if(image == null){
            JOptionPane.showMessageDialog(null, "Selected Image Unavailable");
        }
        
        int x=0,y=0;
        
        for(x=0;x<image.getWidth();x++){
            for(y=0;y<image.getHeight();y++){
                //get pixel's rgb
                int rgb = image.getRGB(x, y);
                //turn rgb as a color
                Color col = new Color(rgb,true);
                //set invert color
                col = new Color(
                        255-col.getRed(),
                        255-col.getGreen(), 
                        255-col.getBlue()
                );
                
                image.setRGB(x, y, col.getRGB());
                
            }
        }
        
        graphics.drawImage(image, 0, 0, image_panel.getWidth(), image_panel.getHeight(), null);
            
        image.flush();
            
    }//GEN-LAST:event_invert_buttonActionPerformed

    private void brightness_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brightness_buttonActionPerformed
        
        try {
            image = ImageIO.read(selected);
        } catch (IOException ex) {
            Logger.getLogger(mainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int brightness = brightness_slider.getValue();
        
        RescaleOp rescaleOp = new RescaleOp(1.2f, brightness, null);
        rescaleOp.filter(image, image);
        
        Graphics2D graphics = (Graphics2D) image_panel.getGraphics();
 
        if(image == null){
            JOptionPane.showMessageDialog(null, "Selected Image Unavailable");
        }
            
        graphics.drawImage(image, 0, 0, image_panel.getWidth(), image_panel.getHeight(), null);
            
        image.flush();
        
    }//GEN-LAST:event_brightness_buttonActionPerformed

    private void grayscale_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grayscale_buttonActionPerformed
        
        Graphics2D graphics = (Graphics2D) image_panel.getGraphics();
            
        if(image == null){
            JOptionPane.showMessageDialog(null, "Selected Image Unavailable");
        }
        
        int x=0,y=0;
        
        for(x=0;x<image.getWidth();x++){
            for(y=0;y<image.getHeight();y++){
                //get pixel's rgb
                int rgb = image.getRGB(x, y);
                //turn rgb as a color
                Color col = new Color(rgb,true);
                //set grayscale
                col = new Color(
                        (col.getRed()+col.getGreen()+col.getBlue())/3,
                        (col.getRed()+col.getGreen()+col.getBlue())/3,
                        (col.getRed()+col.getGreen()+col.getBlue())/3
                );
                
                image.setRGB(x, y, col.getRGB());
                
            }
        }
        
        graphics.drawImage(image, 0, 0, image_panel.getWidth(), image_panel.getHeight(), null);
            
        image.flush();
        
    }//GEN-LAST:event_grayscale_buttonActionPerformed

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
        
        try {
            image = ImageIO.read(selected);
        } catch (IOException ex) {
            Logger.getLogger(mainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Graphics2D graphics = (Graphics2D) image_panel.getGraphics();
            
        if(image == null){
            JOptionPane.showMessageDialog(null, "Selected Image Unavailable");
        }
        
        int change = change_slider.getValue();
        
        int x=0,y=0;
        
        for(x=0;x<image.getWidth();x++){
            for(y=0;y<image.getHeight();y++){
                //get pixel's rgb
                int rgb = image.getRGB(x, y);
                //turn rgb as a color
                Color col = new Color(rgb,true);
                //set invert color
                col = new Color(
                        (col.getRed()+change)%255,
                        (col.getGreen()+change)%255,
                        (col.getBlue()+change)%255
                );
                
                image.setRGB(x, y, col.getRGB());
                
            }
        }
        
        graphics.drawImage(image, 0, 0, image_panel.getWidth(), image_panel.getHeight(), null);
            
        image.flush();
        
    }//GEN-LAST:event_add_buttonActionPerformed

    private void sub_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sub_buttonActionPerformed
        
        try {
            image = ImageIO.read(selected);
        } catch (IOException ex) {
            Logger.getLogger(mainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Graphics2D graphics = (Graphics2D) image_panel.getGraphics();
            
        if(image == null){
            JOptionPane.showMessageDialog(null, "Selected Image Unavailable");
        }
        
        int change = change_slider.getValue();
        
        int x=0,y=0;
        
        for(x=0;x<image.getWidth();x++){
            for(y=0;y<image.getHeight();y++){
                //get pixel's rgb
                int rgb = image.getRGB(x, y);
                //turn rgb as a color
                Color col = new Color(rgb,true);
                //set invert color
                col = new Color(
                        Math.abs(col.getRed()-change)%255,
                        Math.abs(col.getGreen()-change)%255,
                        Math.abs(col.getBlue()-change)%255
                );
                
                image.setRGB(x, y, col.getRGB());
                
            }
        }
        
        graphics.drawImage(image, 0, 0, image_panel.getWidth(), image_panel.getHeight(), null);
            
        image.flush();
        
    }//GEN-LAST:event_sub_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_button;
    private javax.swing.JButton brightness_button;
    private javax.swing.JSlider brightness_slider;
    private javax.swing.JSlider change_slider;
    private javax.swing.JButton drawImage_button;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton grayscale_button;
    private javax.swing.JPanel image_panel;
    private javax.swing.JTextField image_path;
    private javax.swing.JButton invert_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JButton select_button;
    private javax.swing.JLabel selected_image_text;
    private javax.swing.JButton sub_button;
    // End of variables declaration//GEN-END:variables
}
