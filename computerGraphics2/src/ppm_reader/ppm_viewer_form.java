/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ppm_reader;

import java.awt.Color;
import java.awt.Graphics2D;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author hasal
 */
public class ppm_viewer_form extends javax.swing.JFrame {

    File ppm_file;
    
    public ppm_viewer_form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PPMimage_chooser = new javax.swing.JFileChooser();
        main_panel = new javax.swing.JPanel();
        control_panel = new javax.swing.JPanel();
        selectImage_label = new javax.swing.JLabel();
        selectedImage_textarea = new javax.swing.JTextField();
        selectimage_button = new javax.swing.JButton();
        drawImage_button = new javax.swing.JButton();
        main_title = new javax.swing.JLabel();
        PPMdraw_panel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        main_panel.setBackground(new java.awt.Color(255, 255, 255));

        selectImage_label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        selectImage_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selectImage_label.setText("Selected PPM Image");

        selectimage_button.setText("Select PPM Image");
        selectimage_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectimage_buttonActionPerformed(evt);
            }
        });

        drawImage_button.setText("Draw PPM Image");
        drawImage_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawImage_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout control_panelLayout = new javax.swing.GroupLayout(control_panel);
        control_panel.setLayout(control_panelLayout);
        control_panelLayout.setHorizontalGroup(
            control_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selectImage_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(selectedImage_textarea)
            .addComponent(selectimage_button, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
            .addComponent(drawImage_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        control_panelLayout.setVerticalGroup(
            control_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(control_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectImage_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectedImage_textarea, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectimage_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(drawImage_button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        main_title.setBackground(new java.awt.Color(255, 255, 255));
        main_title.setFont(new java.awt.Font("Tw Cen MT", 0, 36)); // NOI18N
        main_title.setForeground(new java.awt.Color(255, 153, 153));
        main_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        main_title.setText("PPM Viewer");

        javax.swing.GroupLayout PPMdraw_panelLayout = new javax.swing.GroupLayout(PPMdraw_panel);
        PPMdraw_panel.setLayout(PPMdraw_panelLayout);
        PPMdraw_panelLayout.setHorizontalGroup(
            PPMdraw_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PPMdraw_panelLayout.setVerticalGroup(
            PPMdraw_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout main_panelLayout = new javax.swing.GroupLayout(main_panel);
        main_panel.setLayout(main_panelLayout);
        main_panelLayout.setHorizontalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(main_title, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PPMdraw_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(control_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        main_panelLayout.setVerticalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addComponent(main_title, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PPMdraw_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(control_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectimage_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectimage_buttonActionPerformed
        
        PPMimage_chooser.showOpenDialog(null);
        
        ppm_file = PPMimage_chooser.getSelectedFile();

        if(ppm_file.isFile()){
            selectedImage_textarea.setText(ppm_file.getAbsolutePath());
        }
        
    }//GEN-LAST:event_selectimage_buttonActionPerformed

    private void drawImage_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawImage_buttonActionPerformed
        
        String next_string;
        int red, green, blue;
        int x=0;
        int y=0;
        int number = 0;
        Graphics2D graphics = (Graphics2D)PPMdraw_panel.getGraphics();
        String PPM_type;
        int max_value;
        String[] splitted_width_height;
        int max_width;
        int max_height;
        int now_width = 0;
        int now_height = 0;
        
        try {
            
            BufferedReader reader = new BufferedReader(new FileReader(ppm_file));
            Scanner scan = new Scanner(ppm_file);
            
            
            //read options of file
            PPM_type = scan.nextLine();
            reader.readLine();
            
            System.out.println(scan.nextLine());
            reader.readLine();
            
            splitted_width_height = scan.nextLine().split("\\s+");
            max_width = Integer.parseInt(splitted_width_height[0]);
            max_height = Integer.parseInt(splitted_width_height[1]);
            System.out.println(max_width+"\n"+max_height);
            reader.readLine();
            
            max_value = Integer.parseInt(scan.nextLine());
            reader.readLine();
            //end of read options of file
            
            
            //if ppm type P6
            if(PPM_type.matches("P3")){
                next_string = reader.readLine();
                //while next line has;
                while(scan.hasNextLine()){
                    //scan red, green and blue values
                    red = scan.nextInt();
                    green = scan.nextInt();
                    blue = scan.nextInt();
                    //check max value
                    if(red > max_value && green > max_value && red > max_value){
                        JOptionPane.showMessageDialog(null, "Broken PPM file");
                    }

                    //equality to location of pointer
                    number += Integer.toString(red).length()+1+Integer.toString(green).length()+1+Integer.toString(blue).length();
                
                    //set color of pixel
                    Color setColor = new Color(red, green, blue);
                    //draw image
                    graphics.setColor(setColor);
                    graphics.drawLine(x, y, x, y);
                
                    //if end of the line
                    if(next_string.length() == number){
                        y++;
                        now_width = x;
                        x=0;
                        number=0;
                        now_height++;
                        //if have new line
                        if(scan.hasNextLine()){
                        next_string = reader.readLine();
                        }
                        //else have new line
                        else{
                            break;
                        }
                    //else end of the line    
                    }else{
                        x++;
                        number++;
                    }
                }
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Can't Decode This PPM Type");
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ppm_viewer_form.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ppm_viewer_form.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_drawImage_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ppm_viewer_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ppm_viewer_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ppm_viewer_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ppm_viewer_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ppm_viewer_form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PPMdraw_panel;
    private javax.swing.JFileChooser PPMimage_chooser;
    private javax.swing.JPanel control_panel;
    private javax.swing.JButton drawImage_button;
    private javax.swing.JPanel main_panel;
    private javax.swing.JLabel main_title;
    private javax.swing.JLabel selectImage_label;
    private javax.swing.JTextField selectedImage_textarea;
    private javax.swing.JButton selectimage_button;
    // End of variables declaration//GEN-END:variables
}
